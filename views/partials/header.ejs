<!DOCTYPE html>
<html lang="en">
<head>
    <title>Blog Project on Server</title>
    <meta charset="utf-8">
    <meta name="description" content="Blogging Project on Server">
    <meta name="viewport" content="width= device-width, initial-scale=1.0">    
    <!-- The linked CSS files below -->
    <link href="/mainstyles.css" rel="stylesheet" />

    <link href="https://cdn.jsdelivr.net/npm/quill@2.0.3/dist/quill.snow.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/quill@2.0.3/dist/quill.bubble.css" rel="stylesheet" />

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,200..1000;1,200..1000&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&family=Rubik+Vinyl&display=swap" rel="stylesheet">
</head>
<body>
    <script src="https://cdn.jsdelivr.net/npm/quill@2.0.3/dist/quill.js"></script>
    <header>
        
        
        <h1 id="mainwebsiteheading">Blog and Memo Storage</h1>
        
    </header>
    <main>
        <div id="navandsearchcontainer">
            
            <nav id="navigationbox">
                <a id="homelink" href="/">Home</a>
                <a id="blogslink" href="/blogs">Blogs</a>
                <a id="contactlink" href="/contact">Contact</a>
            </nav>

            <div id="searchbarcontainer">
                <form id="searchbarform" method="POST">
                <label for="searchbar">Search: </label>
                <input name="searchbar" id="searchbar">
                <button id="searchsubmit" type="button">
                    <img src="searchicon.svg" alt="searchicon" height="20" width="20">
                </button>
                </form>
            </div>
        </div>

        <div id="searchhovercontainer">

        </div>

        <script>

            var searchbar = document.getElementById("searchbar");
            var searchhovercontainer = document.getElementById("searchhovercontainer");
            var searchsubmit = document.getElementById("searchsubmit");

            searchbar.addEventListener("focus", (e) =>{
                
                searchhovercontainer.style.display = "block";
                
            })
           

            document.addEventListener("click", (e) => {
                if(!searchhovercontainer.contains(e.target) && e.target !== searchbar) {
                    searchhovercontainer.style.display = "none";
                }
            })

            function displayblog(ind) {


                var options = {
                    method: 'GET'
                }
                fetch(`/displayblog?ind=`+ind, options)
                .then(response => {
                    return response.text()
                }

                ).then(data => {
                    document.body.innerHTML = data;
                    window.location.href = `/displayblog?ind=`+ind;
                    
                }).catch(error => console.error("error fetching particular blog: " + error))


            }

            function resethovercontainer(){
                var prevsearchresults = [...searchhovercontainer.children];
                prevsearchresults.forEach(child => child.remove());
                searchhovercontainer.style.borderBottom = "none";
            }

            searchbar.addEventListener("input", (e) => {
                console.log("searchbar value entered as: "+ e.target.value);
                resethovercontainer();
                if(e.target.value !== ""){
                fetchhovsearch(e.target.value);
                }
            })

            function fetchhovsearch(q) {
                

                var options = {
                    method: "GET"
                }
                
                fetch("/hoversearch?que="+q, options).then(
                    response => {
                        return response.json();
                    }
                ).then (data => {
                    console.log("hoversearch result from the server as: "+ data);
                    console.log("hoversearch result length from the server as: "+ data.length);
                    if (data.length > 0){
                            searchhovercontainer.style.borderBottom = "black solid 1px";
                        } else {searchhovercontainer.style.borderBottom = "none";}
                        
                    // data is received as an array with each item as an object having title and content properties
                    data.forEach(item => {

                        

                       
                        if (data.indexOf(item) < 6){

                        var regex = /<[^>]+>/g;

                        var hovsearchresulttitle = document.createElement("h4");
                        hovsearchresulttitle.textContent = item.title.replace(regex, "");
                        var hovsearchresultcontent = document.createElement("p");
                        hovsearchresultcontent.textContent = item.content.replace(regex, "");
                        hovsearchresulttitle.classList.add("hovsearchresulttitles");
                        hovsearchresulttitle.id = item.index;
                        hovsearchresultcontent.classList.add("hovsearchresultcontents");

                        hovsearchresulttitle.addEventListener("click", (e) => {
                            console.log("The id of the clicked hoversearch item is: " + e.target.id);
                            displayblog(e.target.id)

                        });




                        var hovsearchresultarticlecontainer = document.createElement("div");
                        hovsearchresultarticlecontainer.appendChild(hovsearchresulttitle);
                        hovsearchresultarticlecontainer.appendChild(hovsearchresultcontent);
                        hovsearchresultarticlecontainer.classList.add("hovsearchresultarticlecontainers");


                        
                        searchhovercontainer.appendChild(hovsearchresultarticlecontainer);
                        }
                        
                        console.log(hovsearchresulttitle);
                        console.log("the index of the item is: " + data.indexOf(item));
                        
                    })
                    console.log("length of data at point A is: " + data.length );
                     if (data.length >= 7){
                            var seemore = document.createElement("div");
                            seemore.innerHTML = "See more results..";
                            seemore.id = "hovsearchseemore";
                            seemore.addEventListener("click", mainsearch)
                    
                            searchhovercontainer.appendChild(seemore);
                        }
                    
                }

                ).catch(error=>console.error("Error fetching search results: "+ error))
            }

            searchsubmit.addEventListener("click", mainsearch);

            

            function mainsearch() {
                
                var query = searchbar.value;
                  
                window.location.href = "/search?sque="+query+"?nque=y";
                                    
                               
            }
            
        </script>
        
